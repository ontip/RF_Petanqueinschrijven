<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.7 on win32)" generated="20200513 13:19:07.879" rpa="false">
<suite id="s1" name="CheckInschrijvenToernooi" source="C:\Users\Gebruiker\OneDrive\GitHub\RF_petanqueinschrijven\tests\CheckInschrijvenToernooi.robot">
<test id="s1-t1" name="Validate if inschrijvingen exist">
<kw name="Connect" library="MySql" type="setup">
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<arguments>
<arg>pymysql</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER_NAME}</arg>
<arg>${DB_USER_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
</arguments>
<msg timestamp="20200513 13:19:08.338" level="INFO">Connecting using : pymysql.connect(db=u875346739_ontipnlv_db, user=u875346739_ontip, passwd=Obelikx61#, host=45.87.80.101, port=3306, charset=None) </msg>
<status status="PASS" starttime="20200513 13:19:08.240" endtime="20200513 13:19:08.406"></status>
</kw>
<status status="PASS" starttime="20200513 13:19:08.238" endtime="20200513 13:19:08.406"></status>
</kw>
<kw name="Validate if inschrijvingen exist" library="MySql">
<arguments>
<arg>${toernooi}</arg>
</arguments>
<kw name="Row Count" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query the database and returns the number of rows from the query. Set
optional input `sansTran` to True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>SELECT * FROM inschrijf Where Toernooi = '${toernooi}';</arg>
</arguments>
<assign>
<var>${current_row_count}</var>
</assign>
<msg timestamp="20200513 13:19:08.410" level="INFO">Executing : Row Count  |  SELECT * FROM inschrijf Where Toernooi = 'erik_test_toernooi'; </msg>
<msg timestamp="20200513 13:19:08.432" level="INFO">${current_row_count} = 5</msg>
<status status="PASS" starttime="20200513 13:19:08.409" endtime="20200513 13:19:08.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${current_row_count}</arg>
</arguments>
<msg timestamp="20200513 13:19:08.434" level="INFO">5</msg>
<status status="PASS" starttime="20200513 13:19:08.433" endtime="20200513 13:19:08.434"></status>
</kw>
<kw name="Row Count Is Greater Than X" library="DatabaseLibrary">
<doc>Check if the number of rows returned from `selectStatement` is greater than the value submitted. If not, then
this will throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit
transaction commit or rollback.</doc>
<arguments>
<arg>SELECT * FROM inschrijf Where Toernooi = '${toernooi}';</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200513 13:19:08.435" level="INFO">Executing : Row Count Is Greater Than X  |  SELECT * FROM inschrijf Where Toernooi = 'erik_test_toernooi';  |  0 </msg>
<msg timestamp="20200513 13:19:08.436" level="INFO">Executing : Row Count  |  SELECT * FROM inschrijf Where Toernooi = 'erik_test_toernooi'; </msg>
<status status="PASS" starttime="20200513 13:19:08.435" endtime="20200513 13:19:08.457"></status>
</kw>
<status status="PASS" starttime="20200513 13:19:08.408" endtime="20200513 13:19:08.458"></status>
</kw>
<kw name="Disconnect" library="MySql" type="teardown">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20200513 13:19:08.462" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20200513 13:19:08.461" endtime="20200513 13:19:08.463"></status>
</kw>
<status status="PASS" starttime="20200513 13:19:08.460" endtime="20200513 13:19:08.463"></status>
</kw>
<doc>Check in de database of er inschrijvingen zijn voor dit toernooi</doc>
<status status="PASS" starttime="20200513 13:19:08.236" endtime="20200513 13:19:08.464" critical="yes"></status>
</test>
<test id="s1-t2" name="Kontrole of inschrijving gelukt is">
<kw name="Connect" library="MySql" type="setup">
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<arguments>
<arg>pymysql</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER_NAME}</arg>
<arg>${DB_USER_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
</arguments>
<msg timestamp="20200513 13:19:08.473" level="INFO">Connecting using : pymysql.connect(db=u875346739_ontipnlv_db, user=u875346739_ontip, passwd=Obelikx61#, host=45.87.80.101, port=3306, charset=None) </msg>
<status status="PASS" starttime="20200513 13:19:08.471" endtime="20200513 13:19:08.510"></status>
</kw>
<status status="PASS" starttime="20200513 13:19:08.469" endtime="20200513 13:19:08.511"></status>
</kw>
<kw name="Validate &quot;Inschrijving geregistreerd&quot;" library="MySql">
<arguments>
<arg>${LICENTIE1}</arg>
</arguments>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>SELECT Licentie1, Naam1, Toernooi, Kenmerk FROM inschrijf ORDER BY Inschrijving DESC LIMIT 1</arg>
</arguments>
<assign>
<var>${queryResults}</var>
</assign>
<msg timestamp="20200513 13:19:08.514" level="INFO">Executing : Query  |  SELECT Licentie1, Naam1, Toernooi, Kenmerk FROM inschrijf ORDER BY Inschrijving DESC LIMIT 1 </msg>
<msg timestamp="20200513 13:19:08.530" level="INFO">${queryResults} = (('45909', 'Erik Hendrikx', 'erik_test_toernooi', 'FIIJ.FKEE'),)</msg>
<status status="PASS" starttime="20200513 13:19:08.513" endtime="20200513 13:19:08.530"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${db_licentie1}</arg>
<arg>${queryResults[0][0]}</arg>
</arguments>
<msg timestamp="20200513 13:19:08.532" level="INFO">${db_licentie1} = 45909</msg>
<status status="PASS" starttime="20200513 13:19:08.530" endtime="20200513 13:19:08.533"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${db_naam1}</arg>
<arg>${queryResults[0][1]}</arg>
</arguments>
<msg timestamp="20200513 13:19:08.535" level="INFO">${db_naam1} = Erik Hendrikx</msg>
<status status="PASS" starttime="20200513 13:19:08.533" endtime="20200513 13:19:08.536"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${db_toernooi}</arg>
<arg>${queryResults[0][2]}</arg>
</arguments>
<msg timestamp="20200513 13:19:08.539" level="INFO">${db_toernooi} = erik_test_toernooi</msg>
<status status="PASS" starttime="20200513 13:19:08.536" endtime="20200513 13:19:08.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DB_KENMERK}</arg>
<arg>${queryResults[0][3]}</arg>
</arguments>
<msg timestamp="20200513 13:19:08.542" level="INFO">${DB_KENMERK} = FIIJ.FKEE</msg>
<status status="PASS" starttime="20200513 13:19:08.540" endtime="20200513 13:19:08.542"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${queryResults[0][0]}</arg>
<arg>${LICENTIE1}</arg>
</arguments>
<status status="PASS" starttime="20200513 13:19:08.543" endtime="20200513 13:19:08.544"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>"De gevonden Licentie is"</arg>
<arg>${db_licentie1}</arg>
</arguments>
<msg timestamp="20200513 13:19:08.546" level="INFO">"De gevonden Licentie is"</msg>
<msg timestamp="20200513 13:19:08.546" level="INFO">45909</msg>
<status status="PASS" starttime="20200513 13:19:08.544" endtime="20200513 13:19:08.546"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>"De gevonden Naam is"</arg>
<arg>${db_naam1}</arg>
</arguments>
<msg timestamp="20200513 13:19:08.547" level="INFO">"De gevonden Naam is"</msg>
<msg timestamp="20200513 13:19:08.548" level="INFO">Erik Hendrikx</msg>
<status status="PASS" starttime="20200513 13:19:08.547" endtime="20200513 13:19:08.548"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>"Het toernooi is"</arg>
<arg>${db_toernooi}</arg>
</arguments>
<msg timestamp="20200513 13:19:08.549" level="INFO">"Het toernooi is"</msg>
<msg timestamp="20200513 13:19:08.549" level="INFO">erik_test_toernooi</msg>
<status status="PASS" starttime="20200513 13:19:08.548" endtime="20200513 13:19:08.549"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>"Het kernmerk is"</arg>
<arg>${DB_KENMERK}</arg>
</arguments>
<msg timestamp="20200513 13:19:08.550" level="INFO">"Het kernmerk is"</msg>
<msg timestamp="20200513 13:19:08.550" level="INFO">FIIJ.FKEE</msg>
<status status="PASS" starttime="20200513 13:19:08.550" endtime="20200513 13:19:08.550"></status>
</kw>
<status status="PASS" starttime="20200513 13:19:08.512" endtime="20200513 13:19:08.551"></status>
</kw>
<kw name="Disconnect" library="MySql" type="teardown">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20200513 13:19:08.553" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20200513 13:19:08.552" endtime="20200513 13:19:08.554"></status>
</kw>
<status status="PASS" starttime="20200513 13:19:08.552" endtime="20200513 13:19:08.555"></status>
</kw>
<tags>
<tag>Controle</tag>
</tags>
<status status="PASS" starttime="20200513 13:19:08.467" endtime="20200513 13:19:08.555" critical="yes"></status>
</test>
<test id="s1-t3" name="Verwijder inschrijving">
<kw name="Connect" library="MySql" type="setup">
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<arguments>
<arg>pymysql</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER_NAME}</arg>
<arg>${DB_USER_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
</arguments>
<msg timestamp="20200513 13:19:08.562" level="INFO">Connecting using : pymysql.connect(db=u875346739_ontipnlv_db, user=u875346739_ontip, passwd=Obelikx61#, host=45.87.80.101, port=3306, charset=None) </msg>
<status status="PASS" starttime="20200513 13:19:08.560" endtime="20200513 13:19:08.597"></status>
</kw>
<status status="PASS" starttime="20200513 13:19:08.559" endtime="20200513 13:19:08.598"></status>
</kw>
<kw name="Verwijder &quot;Inschrijving&quot;" library="MySql">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Delete FROM inschrijf Where Kenmerk = '${DB_KENMERK}';</arg>
</arguments>
<assign>
<var>${delete_command}</var>
</assign>
<msg timestamp="20200513 13:19:08.601" level="INFO">${delete_command} = Delete FROM inschrijf Where Kenmerk = 'FIIJ.FKEE';</msg>
<status status="PASS" starttime="20200513 13:19:08.600" endtime="20200513 13:19:08.601"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>${delete_command}</arg>
</arguments>
<msg timestamp="20200513 13:19:08.602" level="INFO">Executing : Execute SQL String  |  Delete FROM inschrijf Where Kenmerk = 'FIIJ.FKEE'; </msg>
<status status="PASS" starttime="20200513 13:19:08.601" endtime="20200513 13:19:08.625"></status>
</kw>
<status status="PASS" starttime="20200513 13:19:08.599" endtime="20200513 13:19:08.625"></status>
</kw>
<kw name="Disconnect" library="MySql" type="teardown">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20200513 13:19:08.628" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20200513 13:19:08.627" endtime="20200513 13:19:08.628"></status>
</kw>
<status status="PASS" starttime="20200513 13:19:08.626" endtime="20200513 13:19:08.629"></status>
</kw>
<status status="PASS" starttime="20200513 13:19:08.557" endtime="20200513 13:19:08.629" critical="yes"></status>
</test>
<test id="s1-t4" name="Validate &quot;Verwijder inschrijving&quot;">
<kw name="Connect" library="MySql" type="setup">
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<arguments>
<arg>pymysql</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER_NAME}</arg>
<arg>${DB_USER_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
</arguments>
<msg timestamp="20200513 13:19:08.635" level="INFO">Connecting using : pymysql.connect(db=u875346739_ontipnlv_db, user=u875346739_ontip, passwd=Obelikx61#, host=45.87.80.101, port=3306, charset=None) </msg>
<status status="PASS" starttime="20200513 13:19:08.634" endtime="20200513 13:19:08.667"></status>
</kw>
<status status="PASS" starttime="20200513 13:19:08.633" endtime="20200513 13:19:08.667"></status>
</kw>
<kw name="Validate &quot;Verwijder Inschrijving&quot;" library="MySql">
<kw name="Row Count Is 0" library="DatabaseLibrary">
<doc>Check if any rows are returned from the submitted `selectStatement`. If there are, then this will throw an
AssertionError. Set optional input `sansTran` to True to run command without an explicit transaction commit or
rollback.</doc>
<arguments>
<arg>SELECT * FROM inschrijf Where Kenmerk = '${DB_KENMERK}';</arg>
</arguments>
<msg timestamp="20200513 13:19:08.671" level="INFO">Executing : Row Count Is 0  |  SELECT * FROM inschrijf Where Kenmerk = 'FIIJ.FKEE'; </msg>
<msg timestamp="20200513 13:19:08.671" level="INFO">Executing : Row Count  |  SELECT * FROM inschrijf Where Kenmerk = 'FIIJ.FKEE'; </msg>
<status status="PASS" starttime="20200513 13:19:08.670" endtime="20200513 13:19:08.694"></status>
</kw>
<status status="PASS" starttime="20200513 13:19:08.669" endtime="20200513 13:19:08.695"></status>
</kw>
<kw name="Disconnect" library="MySql" type="teardown">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20200513 13:19:08.698" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20200513 13:19:08.697" endtime="20200513 13:19:08.700"></status>
</kw>
<status status="PASS" starttime="20200513 13:19:08.696" endtime="20200513 13:19:08.700"></status>
</kw>
<status status="PASS" starttime="20200513 13:19:08.631" endtime="20200513 13:19:08.700" critical="yes"></status>
</test>
<doc>De inschrijving wordt gekontroleerd en daarna verwijderd</doc>
<status status="PASS" starttime="20200513 13:19:07.892" endtime="20200513 13:19:08.704"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">Controle</stat>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="CheckInschrijvenToernooi">CheckInschrijvenToernooi</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200513 13:19:07.845" level="ERROR">Error in file 'C:\Users\Gebruiker\OneDrive\GitHub\RF_petanqueinschrijven\tests\CheckInschrijvenToernooi.robot': Invalid syntax in test case 'Validate if inschrijvingen exist': Non-existing setting 'Arguments'.</msg>
</errors>
</robot>
